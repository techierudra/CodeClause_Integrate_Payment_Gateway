{"ast":null,"code":"var _jsxFileName = \"/Users/techierudra/Documents/CodeClause/Raw/Payment Gateway/client/src/Home.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport loadScript from \"./custom/loadScript\";\nimport axios from \"axios\";\nimport StaticPage from \"./StaticPage\";\nimport image from './Assets/UPI.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = _ref => {\n  _s();\n\n  let {\n    navigation\n  } = _ref;\n\n  /**\n   * Customer Details state\n   */\n  const [customerName, setCustomerName] = useState(\"\");\n  const [customerPhone, setCustomerPhone] = useState(\"\");\n  const [customerEmail, setCustomerEmail] = useState(\"\");\n  const [customerAmount, setCustomerAmount] = useState(\"\"); // ----------------------------------------------------------------\n\n  /**\n   * Tracking Id and status state\n   */\n\n  const [trackId, setTrackId] = useState(\"\");\n  const [getStatus, setStatus] = useState(\"\");\n  const [throwTrackingId, setThrowTrackingId] = useState({\n    condition: false,\n    uuid: \"\"\n  }); // ----------------------------------------------------------------\n\n  /**\n   * Button State for actions\n   */\n\n  const [dataRecieved, setDataRecieved] = useState(false);\n  const [btnClicked, setBtnClicked] = useState(false);\n  const [btnDisabled, seBtnDisabled] = useState(false);\n  const [formError, setFormError] = useState(\"\"); // ----------------------------------------------------------------\n  //\n\n  /**\n   * status - failed || success\n   * message - String\n   * paymentDetails - Oject\n   *          - name : String\n   *          - email : String\n   *          - phoneNumber : Number\n   *          - amount : Number\n   *          - razorpay_order_id : String\n   *          - razorpay_payment_id : String\n   *          - razorpay_signature : String\n   *          - payment_date : Date\n   */\n\n  const [fetchPayment, setPaymentDetails] = useState({\n    status: \"\",\n    message: \"\",\n    paymentDetails: {\n      name: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      amount: \"\",\n      razorpay_order_id: \"\",\n      razorpay_payment_id: \"\",\n      razorpay_signature: \"\",\n      payment_date: \"\"\n    }\n  });\n  /**\n   * - Snippet for Refreshing the details\n   */\n\n  const Refresh_details = () => {\n    setCustomerName(\"\");\n    setCustomerPhone(\"\");\n    setCustomerEmail(\"\");\n    setCustomerAmount(\"\");\n  };\n  /**\n   * Razorpay Checkout for payment\n   */\n\n\n  const razorpayPopup = () => {\n    if (customerName !== \"\" && customerEmail !== \"\" && customerPhone !== \"\" && customerPhone.length === 10 && customerAmount !== \"\") {\n      seBtnDisabled(true);\n      loadScript(\"https://checkout.razorpay.com/v1/checkout.js\").then(ok => {\n        // create order and receve the order_id for payment\n        axios.post(\"/api/create/order\", {\n          amount: customerAmount * 100,\n          // amount in the smallest currency unit => (INDIAN Currency) => 100paisa is Rs.1 (so you have to multiply the same ammount wiht 100)\n          receipt: \"order_rcptid_10\" // you can automactically change if you can\n\n        }).then(res => {\n          const {\n            orderDetails\n          } = res.data;\n          const {\n            amount,\n            id,\n            currency\n          } = orderDetails; // Pulling the some data from the orderDetails\n\n          var options = {\n            key: \"rzp_test_CQhYw03W2mfalF\",\n            // Enter the Key ID generated from the Dashboard\n            amount: parseInt(amount),\n            // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n            currency: currency,\n            name: \"Rishu Chowdhary\",\n            description: \"Please donate thank you :)\",\n            image: {\n              image\n            },\n            order_id: id,\n            //This is a sample Order ID. Pass the `id` obtained in the previous step\n            handler: response => {\n              const datasend = {\n                name: customerName,\n                email: customerEmail,\n                amount: parseInt(amount),\n                phoneNumber: customerPhone,\n                razorpay_payment_id: response.razorpay_payment_id,\n                razorpay_order_id: response.razorpay_order_id,\n                razorpay_signature: response.razorpay_signature\n              };\n              pushDataIntoDatabase(datasend); // send the data for adding in the database\n            },\n            prefill: {\n              name: customerName,\n              email: customerEmail,\n              contact: customerPhone\n            },\n            notes: {\n              address: \"Please visit https://github.com/techierudra\"\n            },\n            theme: {\n              color: \"#3399cc\"\n            }\n          };\n          const paymentScreen = new window.Razorpay(options);\n          paymentScreen.open();\n          seBtnDisabled(false);\n          Refresh_details();\n        }).catch(err => {\n          alert(\"server error!\");\n          seBtnDisabled(false);\n        });\n      }).catch(err => {\n        alert(err);\n        seBtnDisabled(false);\n      });\n    } else {\n      seBtnDisabled(false);\n      setFormError(\"Please fill the form carefully\");\n    }\n  };\n  /**\n   * Connect the database for updating the data\n   */\n\n\n  const pushDataIntoDatabase = datasend => {\n    axios.post(\"/api/create/order/paymentdetail/Save\", datasend, {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(item => {\n      var _item$data, _item$data$data;\n\n      setThrowTrackingId({\n        condition: true,\n        uuid: item === null || item === void 0 ? void 0 : (_item$data = item.data) === null || _item$data === void 0 ? void 0 : (_item$data$data = _item$data.data) === null || _item$data$data === void 0 ? void 0 : _item$data$data._id\n      });\n      Refresh_details();\n    }).catch(err => {\n      console.log(\"err :>> \", err);\n    });\n  };\n  /**\n   *\n   * @param {*} trackingId - Tracking id which you received after successfully use (Try First)\n   *\n   * - Track Payment details from the server\n   */\n\n\n  const getPaymentDetails = trackingId => {\n    axios.get(\"/api/trackpayment/details/:id\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        id: trackingId\n      }\n    }).then(item => {\n      var _item$data2, _item$data3, _item$data4, _item$data5, _item$data5$paymentDe, _item$data6, _item$data6$paymentDe, _item$data7, _item$data7$paymentDe, _item$data8, _item$data8$paymentDe, _item$data9, _item$data9$paymentDe, _item$data10, _item$data10$paymentD, _item$data11, _item$data11$paymentD, _item$data12, _item$data12$paymentD;\n\n      setStatus(item === null || item === void 0 ? void 0 : (_item$data2 = item.data) === null || _item$data2 === void 0 ? void 0 : _item$data2.status);\n      setPaymentDetails({\n        status: item === null || item === void 0 ? void 0 : (_item$data3 = item.data) === null || _item$data3 === void 0 ? void 0 : _item$data3.status,\n        message: item === null || item === void 0 ? void 0 : (_item$data4 = item.data) === null || _item$data4 === void 0 ? void 0 : _item$data4.message,\n        paymentDetails: {\n          name: item === null || item === void 0 ? void 0 : (_item$data5 = item.data) === null || _item$data5 === void 0 ? void 0 : (_item$data5$paymentDe = _item$data5.paymentDetails) === null || _item$data5$paymentDe === void 0 ? void 0 : _item$data5$paymentDe.name,\n          email: item === null || item === void 0 ? void 0 : (_item$data6 = item.data) === null || _item$data6 === void 0 ? void 0 : (_item$data6$paymentDe = _item$data6.paymentDetails) === null || _item$data6$paymentDe === void 0 ? void 0 : _item$data6$paymentDe.email,\n          phoneNumber: item === null || item === void 0 ? void 0 : (_item$data7 = item.data) === null || _item$data7 === void 0 ? void 0 : (_item$data7$paymentDe = _item$data7.paymentDetails) === null || _item$data7$paymentDe === void 0 ? void 0 : _item$data7$paymentDe.phoneNumber,\n          amount: item === null || item === void 0 ? void 0 : (_item$data8 = item.data) === null || _item$data8 === void 0 ? void 0 : (_item$data8$paymentDe = _item$data8.paymentDetails) === null || _item$data8$paymentDe === void 0 ? void 0 : _item$data8$paymentDe.amount,\n          razorpay_order_id: item === null || item === void 0 ? void 0 : (_item$data9 = item.data) === null || _item$data9 === void 0 ? void 0 : (_item$data9$paymentDe = _item$data9.paymentDetails) === null || _item$data9$paymentDe === void 0 ? void 0 : _item$data9$paymentDe.razorpay_order_id,\n          razorpay_payment_id: item === null || item === void 0 ? void 0 : (_item$data10 = item.data) === null || _item$data10 === void 0 ? void 0 : (_item$data10$paymentD = _item$data10.paymentDetails) === null || _item$data10$paymentD === void 0 ? void 0 : _item$data10$paymentD.razorpay_payment_id,\n          razorpay_signature: item === null || item === void 0 ? void 0 : (_item$data11 = item.data) === null || _item$data11 === void 0 ? void 0 : (_item$data11$paymentD = _item$data11.paymentDetails) === null || _item$data11$paymentD === void 0 ? void 0 : _item$data11$paymentD.razorpay_signature,\n          payment_date: item === null || item === void 0 ? void 0 : (_item$data12 = item.data) === null || _item$data12 === void 0 ? void 0 : (_item$data12$paymentD = _item$data12.paymentDetails) === null || _item$data12$paymentD === void 0 ? void 0 : _item$data12$paymentD.payment_date\n        }\n      });\n    }).catch(err => {\n      console.log(\"err :>> \", err);\n    });\n  };\n  /**\n   * useEffect helps to render the updated data\n   */\n\n\n  useEffect(() => {}, [btnClicked, dataRecieved]);\n  /**\n   * Main Function\n   */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [throwTrackingId.condition ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning alert-dismissible fade show\",\n        role: \"alert\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"me-5\",\n          style: {\n            fontSize: 15\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: `Payment Tracking Id →   `\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this), `  ${throwTrackingId.uuid}`]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"btn-close h-25\",\n          \"data-bs-dismiss\": \"alert\",\n          \"aria-label\": \"Close\",\n          onClick: e => {\n            e.preventDefault();\n            setThrowTrackingId({\n              condition: false,\n              uuid: \"\"\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        width: 70,\n        height: 70,\n        alt: \"logo\",\n        className: \"logo-design\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 222,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"dXaWGV5Q3phXrAyCGDia7zeSZHs=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/techierudra/Documents/CodeClause/Raw/Payment Gateway/client/src/Home.js"],"names":["React","useEffect","useState","loadScript","axios","StaticPage","image","Home","navigation","customerName","setCustomerName","customerPhone","setCustomerPhone","customerEmail","setCustomerEmail","customerAmount","setCustomerAmount","trackId","setTrackId","getStatus","setStatus","throwTrackingId","setThrowTrackingId","condition","uuid","dataRecieved","setDataRecieved","btnClicked","setBtnClicked","btnDisabled","seBtnDisabled","formError","setFormError","fetchPayment","setPaymentDetails","status","message","paymentDetails","name","email","phoneNumber","amount","razorpay_order_id","razorpay_payment_id","razorpay_signature","payment_date","Refresh_details","razorpayPopup","length","then","ok","post","receipt","res","orderDetails","data","id","currency","options","key","parseInt","description","order_id","handler","response","datasend","pushDataIntoDatabase","prefill","contact","notes","address","theme","color","paymentScreen","window","Razorpay","open","catch","err","alert","headers","item","_id","console","log","getPaymentDetails","trackingId","get","fontSize","e","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,qBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;;AAEA,MAAMC,IAAI,GAAG,QAAoB;AAAA;;AAAA,MAAnB;AAAEC,IAAAA;AAAF,GAAmB;;AAC/B;AACF;AACA;AACE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACW,aAAD,EAAgBC,gBAAhB,IAAoCZ,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,EAAD,CAApD,CAP+B,CAQ/B;;AAEA;AACF;AACA;;AACE,QAAM,CAACe,OAAD,EAAUC,UAAV,IAAwBhB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACiB,SAAD,EAAYC,SAAZ,IAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACmB,eAAD,EAAkBC,kBAAlB,IAAwCpB,QAAQ,CAAC;AACrDqB,IAAAA,SAAS,EAAE,KAD0C;AAErDC,IAAAA,IAAI,EAAE;AAF+C,GAAD,CAAtD,CAf+B,CAmB/B;;AAEA;AACF;AACA;;AACE,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCxB,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACyB,UAAD,EAAaC,aAAb,IAA8B1B,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAM,CAAC2B,WAAD,EAAcC,aAAd,IAA+B5B,QAAQ,CAAC,KAAD,CAA7C;AACA,QAAM,CAAC6B,SAAD,EAAYC,YAAZ,IAA4B9B,QAAQ,CAAC,EAAD,CAA1C,CA3B+B,CA4B/B;AACA;;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,QAAM,CAAC+B,YAAD,EAAeC,iBAAf,IAAoChC,QAAQ,CAAC;AACjDiC,IAAAA,MAAM,EAAE,EADyC;AAEjDC,IAAAA,OAAO,EAAE,EAFwC;AAGjDC,IAAAA,cAAc,EAAE;AACdC,MAAAA,IAAI,EAAE,EADQ;AAEdC,MAAAA,KAAK,EAAE,EAFO;AAGdC,MAAAA,WAAW,EAAE,EAHC;AAIdC,MAAAA,MAAM,EAAE,EAJM;AAKdC,MAAAA,iBAAiB,EAAE,EALL;AAMdC,MAAAA,mBAAmB,EAAE,EANP;AAOdC,MAAAA,kBAAkB,EAAE,EAPN;AAQdC,MAAAA,YAAY,EAAE;AARA;AAHiC,GAAD,CAAlD;AAeA;AACF;AACA;;AACE,QAAMC,eAAe,GAAG,MAAM;AAC5BpC,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACAE,IAAAA,iBAAiB,CAAC,EAAD,CAAjB;AACD,GALD;AAOA;AACF;AACA;;;AACE,QAAM+B,aAAa,GAAG,MAAM;AAC1B,QACEtC,YAAY,KAAK,EAAjB,IACAI,aAAa,KAAK,EADlB,IAEAF,aAAa,KAAK,EAFlB,IAGAA,aAAa,CAACqC,MAAd,KAAyB,EAHzB,IAIAjC,cAAc,KAAK,EALrB,EAME;AACAe,MAAAA,aAAa,CAAC,IAAD,CAAb;AACA3B,MAAAA,UAAU,CAAC,8CAAD,CAAV,CACG8C,IADH,CACSC,EAAD,IAAQ;AACZ;AACA9C,QAAAA,KAAK,CACF+C,IADH,CACQ,mBADR,EAC6B;AACzBV,UAAAA,MAAM,EAAE1B,cAAc,GAAG,GADA;AACK;AAC9BqC,UAAAA,OAAO,EAAE,iBAFgB,CAEG;;AAFH,SAD7B,EAKGH,IALH,CAKSI,GAAD,IAAS;AACb,gBAAM;AAAEC,YAAAA;AAAF,cAAmBD,GAAG,CAACE,IAA7B;AACA,gBAAM;AAAEd,YAAAA,MAAF;AAAUe,YAAAA,EAAV;AAAcC,YAAAA;AAAd,cAA2BH,YAAjC,CAFa,CAEkC;;AAE/C,cAAII,OAAO,GAAG;AACZC,YAAAA,GAAG,EAAE,yBADO;AACoB;AAChClB,YAAAA,MAAM,EAAEmB,QAAQ,CAACnB,MAAD,CAFJ;AAEc;AAC1BgB,YAAAA,QAAQ,EAAEA,QAHE;AAIZnB,YAAAA,IAAI,EAAE,iBAJM;AAKZuB,YAAAA,WAAW,EAAE,4BALD;AAMZvD,YAAAA,KAAK,EACH;AAACA,cAAAA;AAAD,aAPU;AAQZwD,YAAAA,QAAQ,EAAEN,EARE;AAQE;AACdO,YAAAA,OAAO,EAAGC,QAAD,IAAc;AACrB,oBAAMC,QAAQ,GAAG;AACf3B,gBAAAA,IAAI,EAAE7B,YADS;AAEf8B,gBAAAA,KAAK,EAAE1B,aAFQ;AAGf4B,gBAAAA,MAAM,EAAEmB,QAAQ,CAACnB,MAAD,CAHD;AAIfD,gBAAAA,WAAW,EAAE7B,aAJE;AAKfgC,gBAAAA,mBAAmB,EAAEqB,QAAQ,CAACrB,mBALf;AAMfD,gBAAAA,iBAAiB,EAAEsB,QAAQ,CAACtB,iBANb;AAOfE,gBAAAA,kBAAkB,EAAEoB,QAAQ,CAACpB;AAPd,eAAjB;AASAsB,cAAAA,oBAAoB,CAACD,QAAD,CAApB,CAVqB,CAUW;AACjC,aApBW;AAqBZE,YAAAA,OAAO,EAAE;AACP7B,cAAAA,IAAI,EAAE7B,YADC;AAEP8B,cAAAA,KAAK,EAAE1B,aAFA;AAGPuD,cAAAA,OAAO,EAAEzD;AAHF,aArBG;AA0BZ0D,YAAAA,KAAK,EAAE;AACLC,cAAAA,OAAO,EAAE;AADJ,aA1BK;AA6BZC,YAAAA,KAAK,EAAE;AACLC,cAAAA,KAAK,EAAE;AADF;AA7BK,WAAd;AAiCA,gBAAMC,aAAa,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoBjB,OAApB,CAAtB;AACAe,UAAAA,aAAa,CAACG,IAAd;AACA9C,UAAAA,aAAa,CAAC,KAAD,CAAb;AACAgB,UAAAA,eAAe;AAChB,SA9CH,EA+CG+B,KA/CH,CA+CUC,GAAD,IAAS;AACdC,UAAAA,KAAK,CAAC,eAAD,CAAL;AACAjD,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD,SAlDH;AAmDD,OAtDH,EAuDG+C,KAvDH,CAuDUC,GAAD,IAAS;AACdC,QAAAA,KAAK,CAACD,GAAD,CAAL;AACAhD,QAAAA,aAAa,CAAC,KAAD,CAAb;AACD,OA1DH;AA2DD,KAnED,MAmEO;AACLA,MAAAA,aAAa,CAAC,KAAD,CAAb;AACAE,MAAAA,YAAY,CAAC,gCAAD,CAAZ;AACD;AACF,GAxED;AA0EA;AACF;AACA;;;AACE,QAAMkC,oBAAoB,GAAID,QAAD,IAAc;AACzC7D,IAAAA,KAAK,CACF+C,IADH,CACQ,sCADR,EACgDc,QADhD,EAC0D;AACtDe,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAD6C,KAD1D,EAMG/B,IANH,CAMSgC,IAAD,IAAU;AAAA;;AACd3D,MAAAA,kBAAkB,CAAC;AACjBC,QAAAA,SAAS,EAAE,IADM;AAEjBC,QAAAA,IAAI,EAAEyD,IAAF,aAAEA,IAAF,qCAAEA,IAAI,CAAE1B,IAAR,kEAAE,WAAYA,IAAd,oDAAE,gBAAkB2B;AAFP,OAAD,CAAlB;AAIApC,MAAAA,eAAe;AAChB,KAZH,EAaG+B,KAbH,CAaUC,GAAD,IAAS;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,GAAxB;AACD,KAfH;AAgBD,GAjBD;AAmBA;AACF;AACA;AACA;AACA;AACA;;;AACE,QAAMO,iBAAiB,GAAIC,UAAD,IAAgB;AACxClF,IAAAA,KAAK,CACFmF,GADH,CACO,+BADP,EACwC;AACpCP,MAAAA,OAAO,EAAE;AACP,wBAAgB,kBADT;AAEPxB,QAAAA,EAAE,EAAE8B;AAFG;AAD2B,KADxC,EAOGrC,IAPH,CAOSgC,IAAD,IAAU;AAAA;;AACd7D,MAAAA,SAAS,CAAC6D,IAAD,aAACA,IAAD,sCAACA,IAAI,CAAE1B,IAAP,gDAAC,YAAYpB,MAAb,CAAT;AACAD,MAAAA,iBAAiB,CAAC;AAChBC,QAAAA,MAAM,EAAE8C,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,gDAAE,YAAYpB,MADJ;AAEhBC,QAAAA,OAAO,EAAE6C,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,gDAAE,YAAYnB,OAFL;AAGhBC,QAAAA,cAAc,EAAE;AACdC,UAAAA,IAAI,EAAE2C,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,yEAAE,YAAYlB,cAAd,0DAAE,sBAA4BC,IADpB;AAEdC,UAAAA,KAAK,EAAE0C,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,yEAAE,YAAYlB,cAAd,0DAAE,sBAA4BE,KAFrB;AAGdC,UAAAA,WAAW,EAAEyC,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,yEAAE,YAAYlB,cAAd,0DAAE,sBAA4BG,WAH3B;AAIdC,UAAAA,MAAM,EAAEwC,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,yEAAE,YAAYlB,cAAd,0DAAE,sBAA4BI,MAJtB;AAKdC,UAAAA,iBAAiB,EAAEuC,IAAF,aAAEA,IAAF,sCAAEA,IAAI,CAAE1B,IAAR,yEAAE,YAAYlB,cAAd,0DAAE,sBAA4BK,iBALjC;AAMdC,UAAAA,mBAAmB,EACjBsC,IADiB,aACjBA,IADiB,uCACjBA,IAAI,CAAE1B,IADW,0EACjB,aAAYlB,cADK,0DACjB,sBAA4BM,mBAPhB;AAQdC,UAAAA,kBAAkB,EAAEqC,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAE1B,IAAR,0EAAE,aAAYlB,cAAd,0DAAE,sBAA4BO,kBARlC;AASdC,UAAAA,YAAY,EAAEoC,IAAF,aAAEA,IAAF,uCAAEA,IAAI,CAAE1B,IAAR,0EAAE,aAAYlB,cAAd,0DAAE,sBAA4BQ;AAT5B;AAHA,OAAD,CAAjB;AAeD,KAxBH,EAyBGgC,KAzBH,CAyBUC,GAAD,IAAS;AACdK,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBN,GAAxB;AACD,KA3BH;AA4BD,GA7BD;AA+BA;AACF;AACA;;;AACE7E,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,EAAW,CAAC0B,UAAD,EAAaF,YAAb,CAAX,CAAT;AAEA;AACF;AACA;;AACE,sBACE;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,iBAMGJ,eAAe,CAACE,SAAhB,gBACC;AACE,QAAA,SAAS,EAAC,iDADZ;AAEE,QAAA,IAAI,EAAC,OAFP;AAAA,gCAIE;AAAK,UAAA,SAAS,EAAC,MAAf;AAAsB,UAAA,KAAK,EAAE;AAAEiE,YAAAA,QAAQ,EAAE;AAAZ,WAA7B;AAAA,kCACE;AAAA,sBAAU;AAAV;AAAA;AAAA;AAAA;AAAA,kBADF,EAEI,KAAInE,eAAe,CAACG,IAAK,EAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE;AACE,UAAA,IAAI,EAAC,QADP;AAEE,UAAA,SAAS,EAAC,gBAFZ;AAGE,6BAAgB,OAHlB;AAIE,wBAAW,OAJb;AAKE,UAAA,OAAO,EAAGiE,CAAD,IAAO;AACdA,YAAAA,CAAC,CAACC,cAAF;AACApE,YAAAA,kBAAkB,CAAC;AACjBC,cAAAA,SAAS,EAAE,KADM;AAEjBC,cAAAA,IAAI,EAAE;AAFW,aAAD,CAAlB;AAID;AAXH;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAuBG,IA7BN,eAoCE;AACE,QAAA,GAAG,EAAElB,KADP;AAEE,QAAA,KAAK,EAAE,EAFT;AAGE,QAAA,MAAM,EAAE,EAHV;AAIE,QAAA,GAAG,EAAE,MAJP;AAKE,QAAA,SAAS,EAAC;AALZ;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAkED,CAvRD;;GAAMC,I;;KAAAA,I;AAyRN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport loadScript from \"./custom/loadScript\";\nimport axios from \"axios\";\nimport StaticPage from \"./StaticPage\";\nimport image from './Assets/UPI.png'\n\nconst Home = ({ navigation }) => {\n  /**\n   * Customer Details state\n   */\n  const [customerName, setCustomerName] = useState(\"\");\n  const [customerPhone, setCustomerPhone] = useState(\"\");\n  const [customerEmail, setCustomerEmail] = useState(\"\");\n  const [customerAmount, setCustomerAmount] = useState(\"\");\n  // ----------------------------------------------------------------\n\n  /**\n   * Tracking Id and status state\n   */\n  const [trackId, setTrackId] = useState(\"\");\n  const [getStatus, setStatus] = useState(\"\");\n  const [throwTrackingId, setThrowTrackingId] = useState({\n    condition: false,\n    uuid: \"\",\n  });\n  // ----------------------------------------------------------------\n\n  /**\n   * Button State for actions\n   */\n  const [dataRecieved, setDataRecieved] = useState(false);\n  const [btnClicked, setBtnClicked] = useState(false);\n  const [btnDisabled, seBtnDisabled] = useState(false);\n  const [formError, setFormError] = useState(\"\");\n  // ----------------------------------------------------------------\n  //\n\n  /**\n   * status - failed || success\n   * message - String\n   * paymentDetails - Oject\n   *          - name : String\n   *          - email : String\n   *          - phoneNumber : Number\n   *          - amount : Number\n   *          - razorpay_order_id : String\n   *          - razorpay_payment_id : String\n   *          - razorpay_signature : String\n   *          - payment_date : Date\n   */\n  const [fetchPayment, setPaymentDetails] = useState({\n    status: \"\",\n    message: \"\",\n    paymentDetails: {\n      name: \"\",\n      email: \"\",\n      phoneNumber: \"\",\n      amount: \"\",\n      razorpay_order_id: \"\",\n      razorpay_payment_id: \"\",\n      razorpay_signature: \"\",\n      payment_date: \"\",\n    },\n  });\n\n  /**\n   * - Snippet for Refreshing the details\n   */\n  const Refresh_details = () => {\n    setCustomerName(\"\");\n    setCustomerPhone(\"\");\n    setCustomerEmail(\"\");\n    setCustomerAmount(\"\");\n  };\n\n  /**\n   * Razorpay Checkout for payment\n   */\n  const razorpayPopup = () => {\n    if (\n      customerName !== \"\" &&\n      customerEmail !== \"\" &&\n      customerPhone !== \"\" &&\n      customerPhone.length === 10 &&\n      customerAmount !== \"\"\n    ) {\n      seBtnDisabled(true);\n      loadScript(\"https://checkout.razorpay.com/v1/checkout.js\")\n        .then((ok) => {\n          // create order and receve the order_id for payment\n          axios\n            .post(\"/api/create/order\", {\n              amount: customerAmount * 100, // amount in the smallest currency unit => (INDIAN Currency) => 100paisa is Rs.1 (so you have to multiply the same ammount wiht 100)\n              receipt: \"order_rcptid_10\", // you can automactically change if you can\n            })\n            .then((res) => {\n              const { orderDetails } = res.data;\n              const { amount, id, currency } = orderDetails; // Pulling the some data from the orderDetails\n\n              var options = {\n                key: \"rzp_test_CQhYw03W2mfalF\", // Enter the Key ID generated from the Dashboard\n                amount: parseInt(amount), // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n                currency: currency,\n                name: \"Rishu Chowdhary\",\n                description: \"Please donate thank you :)\",\n                image:\n                  {image},\n                order_id: id, //This is a sample Order ID. Pass the `id` obtained in the previous step\n                handler: (response) => {\n                  const datasend = {\n                    name: customerName,\n                    email: customerEmail,\n                    amount: parseInt(amount),\n                    phoneNumber: customerPhone,\n                    razorpay_payment_id: response.razorpay_payment_id,\n                    razorpay_order_id: response.razorpay_order_id,\n                    razorpay_signature: response.razorpay_signature,\n                  };\n                  pushDataIntoDatabase(datasend); // send the data for adding in the database\n                },\n                prefill: {\n                  name: customerName,\n                  email: customerEmail,\n                  contact: customerPhone,\n                },\n                notes: {\n                  address: \"Please visit https://github.com/techierudra\",\n                },\n                theme: {\n                  color: \"#3399cc\",\n                },\n              };\n              const paymentScreen = new window.Razorpay(options);\n              paymentScreen.open();\n              seBtnDisabled(false);\n              Refresh_details();\n            })\n            .catch((err) => {\n              alert(\"server error!\");\n              seBtnDisabled(false);\n            });\n        })\n        .catch((err) => {\n          alert(err);\n          seBtnDisabled(false);\n        });\n    } else {\n      seBtnDisabled(false);\n      setFormError(\"Please fill the form carefully\");\n    }\n  };\n\n  /**\n   * Connect the database for updating the data\n   */\n  const pushDataIntoDatabase = (datasend) => {\n    axios\n      .post(\"/api/create/order/paymentdetail/Save\", datasend, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n      .then((item) => {\n        setThrowTrackingId({\n          condition: true,\n          uuid: item?.data?.data?._id,\n        });\n        Refresh_details();\n      })\n      .catch((err) => {\n        console.log(\"err :>> \", err);\n      });\n  };\n\n  /**\n   *\n   * @param {*} trackingId - Tracking id which you received after successfully use (Try First)\n   *\n   * - Track Payment details from the server\n   */\n  const getPaymentDetails = (trackingId) => {\n    axios\n      .get(\"/api/trackpayment/details/:id\", {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          id: trackingId,\n        },\n      })\n      .then((item) => {\n        setStatus(item?.data?.status);\n        setPaymentDetails({\n          status: item?.data?.status,\n          message: item?.data?.message,\n          paymentDetails: {\n            name: item?.data?.paymentDetails?.name,\n            email: item?.data?.paymentDetails?.email,\n            phoneNumber: item?.data?.paymentDetails?.phoneNumber,\n            amount: item?.data?.paymentDetails?.amount,\n            razorpay_order_id: item?.data?.paymentDetails?.razorpay_order_id,\n            razorpay_payment_id:\n              item?.data?.paymentDetails?.razorpay_payment_id,\n            razorpay_signature: item?.data?.paymentDetails?.razorpay_signature,\n            payment_date: item?.data?.paymentDetails?.payment_date,\n          },\n        });\n      })\n      .catch((err) => {\n        console.log(\"err :>> \", err);\n      });\n  };\n\n  /**\n   * useEffect helps to render the updated data\n   */\n  useEffect(() => {}, [btnClicked, dataRecieved]);\n\n  /**\n   * Main Function\n   */\n  return (\n    <div>\n      <header className=\"App-header\">\n        {/*\n         *\n         * - Throw tracking id after payment done\n         *\n         */}\n        {throwTrackingId.condition ? (\n          <div\n            className=\"alert alert-warning alert-dismissible fade show\"\n            role=\"alert\"\n          >\n            <div className=\"me-5\" style={{ fontSize: 15 }}>\n              <strong>{`Payment Tracking Id →   `}</strong>\n              {`  ${throwTrackingId.uuid}`}\n            </div>\n            <button\n              type=\"button\"\n              className=\"btn-close h-25\"\n              data-bs-dismiss=\"alert\"\n              aria-label=\"Close\"\n              onClick={(e) => {\n                e.preventDefault();\n                setThrowTrackingId({\n                  condition: false,\n                  uuid: \"\",\n                });\n              }}\n            ></button>\n          </div>\n        ) : null}\n        {/* ------ */}\n        {/*\n         *\n         * - LOGO (Not mandatory)\n         *\n         */}\n        <img\n          src={image}\n          width={70}\n          height={70}\n          alt={\"logo\"}\n          className=\"logo-design\"\n        />\n        {/* ------- */}\n\n        \n                    \n                     \n        {/*\n         *\n         * - Rest all the Buttons one by one below\n         *\n         */}\n        {/**************************************************/}\n        {/*\n         *\n         * - Track Payment Data Feature\n         *\n         */}\n        {/*  Button trigger modal for tracking data*/}\n        \n      </header>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}